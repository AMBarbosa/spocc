---
title: cleaning names
author: Scott Chamberlain
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
    %\VignetteIndexEntry{cleaning names}
    %\VignetteEngine{knitr::rmarkdown}
    %\VignetteEncoding{UTF-8}
---

```{r echo=FALSE}
knitr::opts_chunk$set(
  comment = "#>",
  collapse = TRUE,
  warning = FALSE,
  message = FALSE
)
```

One problem you often run in to is that there can be various names for the same taxon in any one source. For example:

```{r fixnames1}
library(spocc)
df <- occ(query = 'Pinus contorta', from = c('gbif', 'bison'), limit = 50)
unique(df$gbif$data$Pinus_contorta$name)
unique(df$bison$data$Pinus_contorta$name)
```

This is fine, but when trying to make a map in which points are colored for each taxon, you can have many colors for a single taxon, where instead one color per taxon is more appropriate. There is a function in `scrubr` called `fix_names()`, which has a few options in which you can take the shortest names (usually just the plain binomials like _Homo sapiens_), or the original name queried, or a vector of names supplied by the user.

```{r scrubr-install, eval=FALSE}
install.packages("scrubr")
```

```{r fixnames2}
library(scrubr)
df$gbif$data$Pinus_contorta <- fix_names(df$gbif$data$Pinus_contorta, how = 'shortest')
df$bison$data$Pinus_contorta <- fix_names(df$bison$data$Pinus_contorta, how = 'shortest')
unique(df$gbif$data$Pinus_contorta$name)
unique(df$bison$data$Pinus_contorta$name)
df_comb <- occ2df(df)
head(df_comb); tail(df_comb)
```

Now with one taxon name for each taxon we can more easily make a plot.
